{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/pages/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","showOnClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","bind","Link","to","Contacts","Fragment","components_contacts_Contact","Header","href","branding","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","erros","abrupt","post","history","push","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45712353.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload): contact)\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types';\nimport  './Contact.css';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n class Contact extends Component {\n\n    state = {\n        showContactInfo: false\n    };\n\n    showOnClick = (e) => {\n        this.setState({ showContactInfo: !this.state.showContactInfo });\n    };\n    \n     onDeleteClick = async (id, dispatch) => {\n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        } catch(e) {\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        }\n    };\n\n    render() {\n        const {id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return(\n                        <div className=\"card card-body mb-3\"> \n                            <h4>\n                                Name: {name}{' '} <i \n                                    className=\"fas fa-sort-down\"\n                                    onClick={this.showOnClick}/>\n                                    <i \n                                        className=\"fas fa-times deleteBtn\" \n                                        onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                                    />\n                                    <Link to={`contact/edit/${id}`}>\n                                        <i \n                                            className=\"fas fa-pencil-alt editBtn\"\n                                        ></i>\n                                    </Link>\n                                </h4>\n                            { showContactInfo ? (\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Email: {email}</li>\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\n                                </ul>\n                            ): null}\n                        </div>\n                    )\n                }}\n            </Consumer> \n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact; ","import React, { Component } from 'react'\nimport Contact from './Contact';\nimport {Consumer} from '../../context';\n\nclass Contacts extends Component {\n\n\n  render() {\n\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return(\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact \n                                    key={contact.id}\n                                    contact={contact}/>\n                            ))}\n                        </React.Fragment>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\nexport default Contacts","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\n\nconst Header = (props) => {\n    return(\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    {props.branding}\n                </a> \n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\">Home</i>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\">Add</i>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question\">About</i>\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n//u zagradama moze props (props)\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n  return (\n      <div className=\"form-group\">\n          <label htmlFor={name}>{label}</label>\n          <input\n              type={type}\n              name={name}\n              className={classnames('form-control forom-control-lg', {\n                  'is-invalid': error\n              })}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n          />\n          {error && <div className=\"invalid-feedback\">{error}</div>}\n          \n      </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\n    onSubmit = async (dispatch ,e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        //Check for errors\n        if(name === ''){\n            this.setState({erros: {name: 'Name is required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({erros: {email: 'Email is required'}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({erros: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const newContact = {\n            name, \n            email, \n            phone\n        };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\n\n\n        //Clear state\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n\n  render() {\n      const { name, email, phone, errors } = this.state;\n\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return (\n                    <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter your phone...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    \n                                    <input \n                                        type=\"submit\" \n                                        value=\"Add Contact\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                );\n            }}\n        </Consumer>\n    );\n  }\n}\n\nexport default AddContact;","import React from 'react'\n\n const About = () => {\n  return (\n    <div>   \n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n\n    </div>\n  )\n}\nexport default About;","import React from 'react'\n\n const NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\nexport default NotFound;","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => this.setState({\n          title: data.title,\n          body: data.body\n      }));\n  }\n\n  render() {\n      const { title, body} = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\n    onSubmit = async (dispatch ,e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        //Check for errors\n        if(name === ''){\n            this.setState({erros: {name: 'Name is required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({erros: {email: 'Email is required'}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({erros: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n\n        //Clear state\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n\n  render() {\n      const { name, email, phone, errors } = this.state;\n\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return (\n                    <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter your phone...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    \n                                    <input \n                                        type=\"submit\" \n                                        value=\"Updated Contact\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                );\n            }}\n        </Consumer>\n    );\n  }\n}\n\nexport default EditContact;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport { Provider } from './context';\nimport AddContact from './components/contacts/AddContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/pages/Test';\nimport EditContact from './components/contacts/EditContact';\n//import AddContactref from './components/contacts/AddContactref';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            <Header branding =\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}